name: update project list

on:
  schedule:
    - cron: "0 3,9 * * *" # JST 12:00, 18:00 (UTC 3:00, 9:00)
  workflow_dispatch:

env:
  NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}

concurrency:
  group: crawl-and-insert
  cancel-in-progress: false

jobs:
  crawl-coconala:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      max-parallel: 3
      matrix:
        urls:
          - '"https://coconala.com/requests/categories/231?ref=header&categoryId=231&page=1&recruiting=true" "https://coconala.com/requests/categories/230?ref=header&categoryId=230&page=1&recruiting=true" "https://coconala.com/requests/categories/232?ref=header&categoryId=232&page=1&recruiting=true"'
          - '"https://coconala.com/requests/categories/237?ref=header&categoryId=237&page=1&recruiting=true" "https://coconala.com/requests/categories/813?ref=header&categoryId=813&page=1&recruiting=true" "https://coconala.com/requests/categories/239?ref=header&categoryId=239&page=1&recruiting=true"'
          - '"https://coconala.com/requests/categories/236?ref=header&categoryId=236&page=1&recruiting=true"'

    steps:
      - name: リポジトリチェックアウト
        uses: actions/checkout@v4

      - name: pnpm セットアップ
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Bun セットアップ
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: パッケージインストール
        run: pnpm install

      - name: Playwright インストール
        run: pnpm --filter crawl exec playwright install --only-shell

      - name: クローリング実行
        run: bun run ./packages/crawl/crawl.ts coconala ${{ join(matrix.urls, ' ') }}

      - name: クロール結果をアップロード
        uses: actions/upload-artifact@v4
        with:
          name: crawl-results-coconala-${{ strategy.job-index }}
          path: outputs/*.json
          retention-days: 1

  crawl-crowdworks:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      max-parallel: 3
      matrix:
        urls:
          - '"https://crowdworks.jp/public/jobs/search?category_id=2&order=new" "https://crowdworks.jp/public/jobs/search?category_id=83&order=new" "https://crowdworks.jp/public/jobs/search?category_id=282&order=new"'
          - '"https://crowdworks.jp/public/jobs/search?category_id=173&order=new" "https://crowdworks.jp/public/jobs/search?category_id=78&order=new" "https://crowdworks.jp/public/jobs/search?category_id=346&order=new"'
          - '"https://crowdworks.jp/public/jobs/search?category_id=347&order=new" "https://crowdworks.jp/public/jobs/search?category_id=348&order=new" "https://crowdworks.jp/public/jobs/search?category_id=269&order=new"'

    steps:
      - name: リポジトリチェックアウト
        uses: actions/checkout@v4

      - name: pnpm セットアップ
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Bun セットアップ
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: パッケージインストール
        run: pnpm install

      - name: Playwright インストール
        run: pnpm --filter crawl exec playwright install --only-shell

      - name: クローリング実行
        run: bun run ./packages/crawl/crawl.ts crowdworks ${{ matrix.urls}}

      - name: クロール結果をアップロード
        uses: actions/upload-artifact@v4
        with:
          name: crawl-results-crowdworks-${{ strategy.job-index }}
          path: outputs/*.json
          retention-days: 1
  crawl-lancers:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      max-parallel: 3
      matrix:
        urls:
          - '"https://www.lancers.jp/work/search/system/websystem?open=1&show_description=1&type%5B%5D=project&type%5B%5D=task&work_rank%5B%5D=0&work_rank%5B%5D=1&work_rank%5B%5D=2&work_rank%5B%5D=3" "https://www.lancers.jp/work/search/system/software?open=1&show_description=1&type%5B%5D=project&type%5B%5D=task&work_rank%5B%5D=0&work_rank%5B%5D=1&work_rank%5B%5D=2&work_rank%5B%5D=3" "https://www.lancers.jp/work/search/system/code_bug_fixes?open=1&show_description=1&type%5B%5D=project&type%5B%5D=task&work_rank%5B%5D=0&work_rank%5B%5D=1&work_rank%5B%5D=2&work_rank%5B%5D=3" "https://www.lancers.jp/work/search/system/othersystem?open=1&show_description=1&type%5B%5D=project&type%5B%5D=task&work_rank%5B%5D=0&work_rank%5B%5D=1&work_rank%5B%5D=2&work_rank%5B%5D=3"'

    steps:
      - name: リポジトリチェックアウト
        uses: actions/checkout@v4

      - name: pnpm セットアップ
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Bun セットアップ
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: パッケージインストール
        run: pnpm install

      - name: Playwright インストール
        run: pnpm --filter crawl exec playwright install --only-shell

      - name: クローリング実行
        run: bun run ./packages/crawl/crawl.ts lancers ${{ matrix.urls}}

      - name: クロール結果をアップロード
        uses: actions/upload-artifact@v4
        with:
          name: crawl-results-lancers-${{ strategy.job-index }}
          path: outputs/*.json
          retention-days: 1
  update-notion:
    needs: [crawl-coconala, crawl-crowdworks, crawl-lancers]
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
      - name: リポジトリチェックアウト
        uses: actions/checkout@v4

      - name: pnpm セットアップ
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Node.js セットアップ
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Bun セットアップ
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: パッケージインストール
        run: pnpm install

      - name: クロール結果をダウンロード
        uses: actions/download-artifact@v4
        with:
          pattern: crawl-results-*
          path: outputs
          merge-multiple: true

      - name: outputsフォルダのファイル一覧取得
        id: get-files
        run: |
          FILES=$(find outputs -name "*.json" -type f | grep -v .gitignore | tr '\n' ' ')
          echo "files=$FILES" >> $GITHUB_OUTPUT

      - name: データ更新
        run: |
          for file in ${{ steps.get-files.outputs.files }}; do
            echo "Processing: $file"
            bun run ./packages/update-projects/insert-to-notion.ts "$file"
          done
